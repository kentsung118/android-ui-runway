// Top-level build file where you can add configuration options common to all sub-projects/modules.
// test ssh push
buildscript {
    ext {
        kotlin_version = '1.5.20'
    }

//    ext.kotlin_version = '1.3.21'
    ext.appComp_version = '28.0.0'
    ext.rxjava_version = '2.1.10'
    ext.retrofit_version = '2.3.0'
    ext.junit_version = '4.12'
    ext.mockito_version = '2.15.+'
    ext.hamcrest_version = '1.3'
    ext.androidTestRules_version = '1.0.1'
    ext.androidTestRunner_verison = '1.0.1'
    ext.gson_version = '2.8.2'
    ext.androidArch_version = '1.1.0'
    ext.androidArch_room_version = '1.0.0'


    repositories {
        //大陸才用
//        maven { url 'https://maven.aliyun.com/repository/central' }
//        maven { url 'https://maven.aliyun.com/repository/public' }
//        maven { url 'https://maven.aliyun.com/repository/google' }
//        maven { url 'https://maven.aliyun.com/mvn/guide' }
//        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }


        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.1'
//      classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.20"

        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // add plugin
    }
}

allprojects {
    repositories {
//        maven { url 'http://dl.bintray.com/populov/maven' }
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
//        maven {
//            url 'https://maven.google.com/'
//            name 'Google'
//        }
        //在大陸取得不到海外 maven repo，用阿里雲 maven repo 替代...
//        maven { url 'https://maven.aliyun.com/repository/central' }
//        maven { url 'https://maven.aliyun.com/repository/public' }
//        maven { url 'https://maven.aliyun.com/repository/google' }
//        maven { url 'https://maven.aliyun.com/mvn/guide' }
//        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        //宣告本地*.aar的lib位置，加载成功的话在 External Libraries 看得到
        flatDir {
            dirs 'libs/fresco'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
